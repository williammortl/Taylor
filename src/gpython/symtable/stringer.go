// Copyright 2018 The go-python Authors.  All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// generated by stringer -type=Scope,BlockType -output stringer.go; DO NOT EDIT

package symtable

import "fmt"

const _Scope_name = "ScopeInvalidScopeLocalScopeGlobalExplicitScopeGlobalImplicitScopeFreeScopeCell"

var _Scope_index = [...]uint8{0, 12, 22, 41, 60, 69, 78}

func (i Scope) String() string {
	if i+1 >= Scope(len(_Scope_index)) {
		return fmt.Sprintf("Scope(%d)", i)
	}
	return _Scope_name[_Scope_index[i]:_Scope_index[i+1]]
}

const _BlockType_name = "FunctionBlockClassBlockModuleBlock"

var _BlockType_index = [...]uint8{0, 13, 23, 34}

func (i BlockType) String() string {
	if i+1 >= BlockType(len(_BlockType_index)) {
		return fmt.Sprintf("BlockType(%d)", i)
	}
	return _BlockType_name[_BlockType_index[i]:_BlockType_index[i+1]]
}
